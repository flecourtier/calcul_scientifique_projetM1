//QUESTION 4

fn main() {
    let L = 1.;
    let T = 0.5;
    let N = 1000;
    let dx = L/(N as f64);

    // CONDITION CFL VERIFIEE
    // On prend un dt tel que Cdt<=dx
    let dt=dx/C;
    plotu(L, N, T, dt);

    // // CONDITION CFL NON VERIFIEE
    // // On prend un dt tel que Cdt<=dx
    // let dt=(1.+dx)*dx/C;
    // plotu(L, N, T, dt);
}

// QUESTION 5

fn main() {
    let L=1.;
    let L = 1.;
    let T = 0.5;

    // let N=110;
    // let dx = L/(N as f64);
    // let dt=dx/C;

    // let (uapp,tn) = solve(L, N, T, dt);
    // let mut uex = vec![0.;N];
    // for i in 0..N {
    //     let xi = dx*((i+1) as f64);
    //     uex[i] = u_exact(xi, tn);
    // }

    // println!("{:?}",C*dt<=dx);
    
    // println!("uapp {:?}",uapp);
    // println!("uex {:?}",uex);

    // println!("uapp82 {:?}",uapp[82]);
    // println!("uex82 {:?}",uex[82]);
    // println!("diff82 {:?}",difference(&uapp,&uex)[82]);
    // println!("{:?}",norme_L1(difference(&uapp,&uex)));

    // let nb_N=20;
    // let mut tab_N = vec![0;nb_N];
    // for n in 0..nb_N {
    //     tab_N[n] = (n+1)*10;
    // }

    let tab_N = vec![50,100,200,300,500,1000,2000,3000];
    convergence(L, tab_N, T);
}

// QUESTION 6
fn main() {
    let L = 1.;
    let T = 0.5;
    let N = 200;
    let dx = L/(N as f64);
    let dt=0.005*dx/C; // < dx
    plotu_centre(L, N, T, dt);
}

// QUESTION 7
fn main() {
    let L = 1.;
    let T = 0.5;
    let N = 200;
    let dx = L/(N as f64);
    let dt=0.5*dx/f64::abs(C); // < dx
    plotu_lax_wendrof(L, N, T, dt);
    let tab_N = vec![50,100,200,300,500,1000,2000,3000];
    plot_erreur_inf(L, tab_N, T);
}
